#
# Copyright 2020 DXOS.org
#

name: Publish main branch to NPM (main branch => x.x.x-alpha.0)

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: dxos/release-please-action@v0.0.105
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: '@dxos/sdk'
          bump-minor-on-breaking: true
      - uses: actions/checkout@v2
        # Only publish when a new release is created.
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}

      - run: git config --global user.email "devops@dxos.org"
      - run: git config --global user.name "DXOS.org"

      # build
      - run: yarn
      - run: node packages/extension/scripts/update-version.js `echo "${{ steps.release.outputs.tag_name }}" | sed 's/^v//'`
      - run: yarn build

      # lint and test
      - run: yarn lint:lockfile
      - run: yarn lint
      - run: yarn test

      # clean up the environment
      - run: git reset --hard

      # set the version
      - run: yarn lerna version `echo "${{ steps.release.outputs.tag_name }}" | sed 's/^v//'`-alpha.0 --no-git-tag-version -y
      - run: git commit -am "${{ steps.release.outputs.tag_name }}"-alpha.0
      - run: git push

      # set the tag
      - run: git tag -f "${{ steps.release.outputs.tag_name }}"-alpha.0
      - run: git push --tags -f
      - run: git push --delete origin "${{ steps.release.outputs.tag_name }}"

      # publish to NPM
      - run: yarn lerna publish from-package --force-publish -y --dist-tag="alpha"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/upload-artifact@v2
        with:
          name: dxos-devtools
          path: packages/extension/dist
        if: ${{ steps.release.outputs.release_created }}
